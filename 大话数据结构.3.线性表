											第3章线性表
3.1开场白（略过）
3.2线性表的定义
线性表(List):零个或多个数据元素的有限序列。
3.3线性表的抽象数据类型
ADT线性表（List）
Data
    线性表的数据对象集合为｛a1,a2,......,an｝，每个元素的类型均为DataType。其中，除第一个元素a1外，每一个元素有且只有一个直接前驱元素，除了最后一个元素an外，每一个元素有且只有一个直接后继元素。数据元素之间的关系是一对一的关系。
3.4线性表的顺序存储结构
3.4.1顺序存储定义
线性表的顺序存储结构，指的是用一段地址连续的存储单元依次存储线性表的数据元素。
数组长度与线性表长度区别：
在顺序存储下的线性表中，数组长度是一定的（动态分配一位数组不考虑，因为会带来性能上的损耗）线性表长度会随着线性表插入和删除操作的进行，这个量是变化的。所以在任意时刻，线性表长度应该小于等于数组长度。
线性表顺序存储结构代码：
#define MAXSIZE 20 //数组的大小，存储空间初始的分配量
typedef int ElenType;//ElenType 类型根据实际情况而定，这里建设为int
typedef strutc
{
  ElenType data[MAXSIZE];//数组存储数据元素
  int length; //线性表当前长度
}SqList;
3.4.4地址计算方法
存储器中的每个存储单元都有自己的编号，这个编号称为地址。
LOC(ai+1)=LOC(ai)+c
LOC(ai)=LOC(a(1+i-1))+c=LOG(a(1))+(i-1)*c
3.5顺存储结构的插入与删除
3.5.1获得元素操作



















